#configuration file for Bots. Note that there is also a file 'settings.py' with (django) configuration.
#The configuration file consists of sections, led by a "[section]" header and followed by "name: value" entries, 
#with continuations in the style of RFC 822; "name=value" is also accepted. 
#Note that leading whitespace is removed from values. 
#Lines beginning with "#" or ";" are ignored and may be used to provide comments.

[routegroups]
# use to simplify scheduling, pass group name as parameter to run a group of routes (comma separated)
# then run bots-engine with parameter -g<group>
# routes can be in multiple groups

#group1 = route1, route3, route7
#group2 = route2, route4, routs5, route6, route7

[settings]
#maxdays: number of days reports and tracing are kept; integer; default is 30
maxdays = 30
#maxdaysarchive: number of days files in archive are kept; integer; default is 180
maxdaysarchive = 180
#archivezip: If True archive to zip-files (instead of directories). Default: False.
archivezip = False
#archiveexternalname: if True archive using the external name of file. Does not work for all types of communciation (as there is not always a filename). Default: False.
archiveexternalname = False
#hoursrunwithoutresultiskept: number of HOURS reports and tracing are kept for runs without input (no edi files received); integer; default is 24
hoursrunwithoutresultiskept = 24
#maxdayspersist: number of days persistent data are kept.; integer; default is 30
maxdayspersist = 30
#maxruntime: number of minutes the bots-engine is allowed to run. If another instance of bots-engine is started is will not error before the maxruntime. Default: 60 (minutes)
maxruntime = 60
#limit: number of (reports, orders) max displayed on one screen; default is 30
limit = 30
#adminlimit: number of lines displayed on one screen for configuration items; default is value of 'limit'
#adminlimit = 30
#save_on_top: if True, admin pages show save etc buttons on top of screen; Default False, buttons at bottom only
save_on_top = False
#interchangecontrolperpartner: if True: interchange control reference per receiver; if False: per sender. Default: False
interchangecontrolperpartner=False
#multiplevaluesasterisk: determines what to show for display of incoming messages when multiple values: '*' (True) or first encountered value (False). Default: True
multiplevaluesasterisk = True
#whencleanup: how often is cleanup done. Values: daily (at first run of day), never (you schedule cleanup yourself). Default: daily 
whencleanup=daily
#maxfilesizeincoming: for incoming edifile: maximum size. Edi-files larger than this size wil not be translated, but give an error. 
#reason: engine might be too long gone; also you should check your computers memory (RAM). 
#Note1: an edi file with multiple interchanges (edifact, x12) will first be split in separate interchanges.
#Note2: edi files up to 10Mb are processed without problems on computer with 4Gb RAM.
#Note3: edi files are not that big. Actually I have never seen edi file of 5Mb...
#Default is 5000000 (5Mb).
maxfilesizeincoming = 5000000
#maxsecondsperchannel: for incoming channels: limit the time in-communication is done (in seconds). Default is 60. This is the global parameter, can also be limited per channel (in GUI)
maxsecondsperchannel = 60
#max_number_errors: for incoming files: max number of errors to report; default is 10. If max_number_errors is reached, parsing stops and errors are reported.
#Note that some errors cause immediate end of parsing.
max_number_errors = 10
#compatibility_handle_message_errors: compatibiliy mode. for bots <= 2.2.1, error is mapping script or writing outgoing message would cause whole interchange to be errored.
#for bots >= 3.0.0 bots will process other messages in the interchange. Default: False
compatibility_handle_message_errors = False
#compatibility_mailbag: compatibiliy mode. for bots <= 2.2.1, messagetype edifact, x12, tradacoms do not use mailbag by default.
#for bots >= 3.0.0 bots will use mailbag fo edifact, x12 and tradacoms. Default: False
compatibility_mailbag = False
#port used to assure only one instance of bots-engine is running. default: 28081
port = 28081
#global timeout in seconds; default is 10
globaltimeout = 10
#ftpspecific timeout in seconds; default is 10
ftptimeout = 10
#botsreplacechar can be used as replacement character for incoming or outgoing messages; set syntax parameters checkcharsetin and checkcharsetout using code 'botsreplace'. Default: space. ('space' can not be set explicitly).
#botsreplacechar = 
#sendreportiferror : send a report by mail if errors occurred. default= False (never send )
sendreportiferror = False
#sendreportifprocesserror : do not send a report by mail if only process errors occurred. useful if outcommunication often gives error. default= True (send if there is a process error)
sendreportifprocesserror = True
#settings for logging of bots-engine
#logging is always to log file, optional to console
#console logging on (True) or off (False); default is True.
log_console = True
#log_file_level: level for logging to log file. Values: DEBUG,INFO,WARNING,ERROR or CRITICAL. Default: INFO
log_file_level = INFO
#log_file_number: number of rotating log files. Value: number. Default: 10
log_file_number = 10
#for one merged log per day, set log_when = daily. Default: Each run uses it's own log file
log_when = each run

#debug options
#get_checklevel: 2: include check of mpaths in get/getloop with grammar; 1: check mpaths in get/getloop for type, etc; 0:no checks on mpaths (faster)
#use get_checklevel=2 for developing. Production: either use 0 or 1. 0 is faster, but be 100% sure all get/getloops are OK.  
get_checklevel = 1
#debug: if True, errors include trace. Default False
debug = False

#other options for logging/debugging
#readrecorddebug: detailed information about the records that are read (DEBUG level). Default False
readrecorddebug = False
#mappingdebug: detailed information about what goes on in mapping script (DEBUG level). For developing mappings. Default False
mappingdebug = False

#options for debug info. These option do not use the logging system, info goes to console.
#ftpdebug: print detailed information about ftp session(s). Default 0 (no debug)(can use 0,1,2)
ftpdebug = 0
#smtpdebug: print detailed information about smtp session(s). Default 0 (no debug)(can use 0,1)
smtpdebug = 0
#pop3debug: print detailed information about pop3 session(s). Default 0 (no debug)(can use 0,1,2)
pop3debug = 0
#imap4debug: print detailed information about imap4 session(s). Default 0 (no debug) (can use 0,1,2,3,4,5)
imap4debug=0


[webserver]
#webserver in development or production. default is production
environment = production 
#port at which at bots-gui is server. default is 8080
port = 8080
#settings for logging of bots-webserver
#logging is always to log file, optional to console
#console logging on (True) or off (False); default is True.
log_console = True
#log_console_level: level for logging to console/screen. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: STARTINFO 
log_console_level = STARTINFO
#log_file_level: level for logging to log file. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: INFO
log_file_level = INFO

#in order to use ssl/https:
#    - indicate here the file for the ssl_certificate and ssl_private_key. (both can be in the same file)
#    - uncomment the lines
#(and of course you will have to make the certificate and private key yourself)
#self-signed certificates are allowed.
#ssl_certificate = /path/to/filename
#ssl_private_key = /path/to/filename

#botslogo: to customize name of botslogo html file (default: bots/botslogo.html)
botslogo = bots/botslogo.html
#environment_text: text displayed on right of bots logo. Useful to indicate different environments: TEST, PRODUCTION. Default: no text
environment_text = 
#environment_text_color: Use HTML valid "color name" or #RGB values. Default: Black (#000000)
#environment_text_color = Red
environment_text_color = #000000

#menu_automaticretrycommunication: when True, add automaticretrycommunication to run menu. Default: False
menu_automaticretrycommunication = True
#menu_cleanup: when True, add cleanup to run menu. Default: False
menu_cleanup = False
#menu_changepassword: when False, hide change password in home menu. Default: True
menu_changepassword = True
#menu_all_routes: 3 options:
# 1. True: run menu contains entries to run each route individually
# 2. notindefaultrun: only routes not in default run in run menu
# 3. False: no extra menus.
#Default: False
menu_all_routes = False

[acceptance]
runacceptancetest = False


[custommenus]
#it is possible to add a custom menu to the default bots menu. Features
#1. the menuname to appear on the menu bar in bots monitor; Default: Custom. Eg:
#menuname = MyMenu
#2. Entries ins the custom menu: all "name: value" entries in this section will be added to the custom menu in bots monitor. Eg:
#Incoming = /incoming/?all
#3. Menu divider lines can be added with special value "---". Eg:
#divider1 = ---
# note: sequence of entries is preserved, but case of menu entry is not; title case will be applied


[jobqueue]
# Enable the job queue for running bots engine. Default: False
enabled = False
# Port to use for the job queue xmlrpc server (on localhost). Default: 28082
port = 28082
# launch job frequency, in seconds. Default: 5
lauchfrequency = 5
# startup delay for launcher, in seconds. Default: 5 (longer delays may be useful to allow windows patching reboots)
startupdelay = 5
# usually, duplicate jobs in the queue would be pointless as they will do the same thing; but you might want this!
allowduplicates = False
# What to do when jobs exceed maximum run time. If True: job is killed. Default: False 
killaftermaxruntime = False
#settings for logging of bots-jobqueue
#logging is always to log file, optional to console
#console logging on (True) or off (False); default is True.
log_console = True
#log_console_level: level for logging to console. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: STARTINFO
log_console_level = STARTINFO
#log_file_level: level for logging to log file. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: INFO
log_file_level = INFO


########################################################################
### dirmonitoring ######################################################
# the bots directory monitoring tool (bots-dirmonitor) uses a different section for each monitor
# name of sections: dirmonitor<int>     Note that section dirmonitor contains the general settings for all monitors
#eg:
#  [dirmonitor]
# #general settings for directory monitoring
#  [dirmonitor1]
#  #directory to watch. Path (no file name or wild-card) specifies directory 
#  #if you filename/wild-card specified in path: only that file(s) will be watched. This is useful using one file as message-queue; events is fired when appending.
#  #no default available.
#  path = c:/edi/outbound/invoice
#  #filemask to use for files in this directory. default: '*'
#  filemask = *.xml
#  #route to run when event detected in directory. default: '' (no route, just run bots-engine)
#  route = myfirstroute 
#  #should directory be watched recursively (note: only file events will be monitored). Default: false
#  recursive = False
#  [dirmonitor2]
#  path = c:/edi/outbound/asn
#  #other parameters: defaults
[dirmonitor]
#settings for directory monitoring; settings for each directory are below (dirmonitor1, etc) 

#tasks are fired to jobqueue after timeout seconds (default: 2)
timeout = 2
# launch job frequency, in seconds. Default: 5
lauchfrequency = 5
#settings for logging of bots-dirmonitor
#logging is always to log file, optional to console
#console logging on (True) or off (False); default is True.
log_console = True
#log_console_level: level for logging to console. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: STARTINFO
log_console_level = STARTINFO
#log_file_level: level for logging to log file. Values: DEBUG,INFO,STARTINFO,WARNING,ERROR or CRITICAL. Default: INFO
log_file_level = INFO

[dirmonitor1]
#~ path = C:/Users/hje/Documents/Bots/botsdev/bots/botssys/infile/stress06/xml
path = /home/hje/Bots/botsdev/bots/botssys/infile/stress06/xml
recursive = False
filemask = *.xml
route = 

[dirmonitor2]
#path = C:/Users/hje/Documents/Bots/botsdev/bots/botssys/infile/stress06/xml2
path = /home/hje/Bots/botsdev/bots/botssys/infile/stress06/xml2
recursive = True
filemask = *.xml
route = 


[directories]
#directories/pathnames where bots expects files. 
#Do not use backslashes/double slashes/double backslashes; pathnames are without ending slash.

#botssys: internal storage of files, database, archive, etc (spool). Default: botssys
botssys = botssys

#usersys: user script files, grammars, mappings, etc. Default: usersys
usersys = usersys

#directory for configuration files is set with command line parameter '-c', eg -cconfig
#by setting usersys/botssys and config (as command line parameter) you can easy setup different environments (test/production).
#in *nix : if you just want another place for these directories you could use a symbolic link.

#'other' directory settings:
#*******- SQLitedb: set path to sqlite database in config/settings.py
#*******- archive directory: set in channel
#*******- infile: plugins place test edi files here; set in channel
#*******- outfile: plugins place result of translations here; set in channel


[charsets]
#give alias to some (edifact)charsets
unoc = latin_1
#latin_1 is iso8859_1
unod = iso8859_2
unoe = iso8859_5
unof = iso8859_7
unog = iso8859_3
unoh = iso8859_4
unoi = iso8859_6
unoj = iso8859_8
unok = iso8859_9
#~ unow = utf_8         #I am not sure if UNOW actually exists.
#unox is defined as: Code extension technique as defined by ISO 2022 utilising the escape techniques in accordance with ISO 2375.
unox = iso2022_jp
unoy = utf_8
keca = euc_kr
